import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../domain/entities/entities.dart';
import '../../application/state/app_state.dart';
import '../../core/utils/money.dart';
import '../orders/orders_page.dart';

class CheckoutPage extends StatefulWidget {
  const CheckoutPage({super.key});

  @override
  State<CheckoutPage> createState() => _CheckoutPageState();
}

class _CheckoutPageState extends State<CheckoutPage> {
  final _name = TextEditingController();
  final _phone = TextEditingController();
  final _addr = TextEditingController();
  final _city = TextEditingController();
  final _coupon = TextEditingController();

  @override
  void dispose() {
    _name.dispose(); _phone.dispose(); _addr.dispose(); _city.dispose(); _coupon.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final app = context.watch<AppState>();

    return Scaffold(
      appBar: AppBar(title: const Text('Thanh toán')),
      body: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          const Text('Địa chỉ giao hàng', style: TextStyle(fontWeight: FontWeight.w700)),
          const SizedBox(height: 8),
          TextField(controller: _name, decoration: const InputDecoration(labelText: 'Họ và tên')),
          const SizedBox(height: 8),
          TextField(controller: _phone, keyboardType: TextInputType.phone, decoration: const InputDecoration(labelText: 'Số điện thoại')),
          const SizedBox(height: 8),
          TextField(controller: _addr, decoration: const InputDecoration(labelText: 'Địa chỉ')),
          const SizedBox(height: 8),
          TextField(controller: _city, decoration: const InputDecoration(labelText: 'Thành phố')),
          const SizedBox(height: 16),

          const Text('Mã khuyến mãi', style: TextStyle(fontWeight: FontWeight.w700)),
          const SizedBox(height: 8),
          Row(
            children: [
              Expanded(child: TextField(controller: _coupon, decoration: const InputDecoration(hintText: 'FIT30 / FREESHIP'))),
              const SizedBox(width: 10),
              ElevatedButton(
                onPressed: () => app.setCoupon(_coupon.text),
                child: const Text('Áp dụng'),
              ),
            ],
          ),
          if (app.couponCode != null) Padding(
            padding: const EdgeInsets.only(top: 8),
            child: Text('Đã áp dụng mã: ', style: const TextStyle(color: Colors.green)),
          ),

          const SizedBox(height: 16),
          const Text('Tóm tắt đơn hàng', style: TextStyle(fontWeight: FontWeight.w700)),
          const SizedBox(height: 8),
          ...app.cart.map((e) => ListTile(
            dense: true,
            contentPadding: EdgeInsets.zero,
            title: Text('  ', maxLines: 1, overflow: TextOverflow.ellipsis),
            trailing: Text(formatVnd(e.book.price * e.qty)),
          )),
          const Divider(),
          _row('Tạm tính', formatVnd(app.subtotal)),
          _row('Giảm giá', '- ' + formatVnd(app.discount)),
          _row('Phí vận chuyển', app.shippingFee == 0 ? 'Miễn phí' : formatVnd(app.shippingFee)),
          const SizedBox(height: 6),
          _row('Cần thanh toán', formatVnd(app.payable), bold: true),
          const SizedBox(height: 20),
          ElevatedButton(
            onPressed: () async {
              if (_name.text.trim().isEmpty || _phone.text.trim().isEmpty || _addr.text.trim().isEmpty) {
                ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('Vui lòng điền đủ thông tin')));
                return;
              }
              app.setAddress(Address(fullName: _name.text, phone: _phone.text, line1: _addr.text, city: _city.text));
              final order = await app.placeCurrentOrder();
              if (!mounted) return;
              if (order != null) {
                Navigator.of(context).pushAndRemoveUntil(
                  MaterialPageRoute(builder: (_) => const OrdersPage()),
                  (route) => route.isFirst,
                );
                ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('Đặt hàng thành công!')));
              }
            },
            style: ElevatedButton.styleFrom(padding: const EdgeInsets.symmetric(vertical: 14), shape: const StadiumBorder()),
            child: Text('Đặt hàng  ' + formatVnd(app.payable)),
          ),
        ],
      ),
    );
  }

  Widget _row(String l, String r, {bool bold = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        children: [
          Expanded(child: Text(l, style: TextStyle(fontWeight: bold ? FontWeight.w700 : FontWeight.w400))),
          Text(r, style: TextStyle(fontWeight: bold ? FontWeight.w700 : FontWeight.w400)),
        ],
      ),
    );
  }
}

